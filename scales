#!/usr/bin/env node
/**
 * Scales.js â€” the flexible game management daemon built for PufferPanel.
 * Licensed under a GPL-v3 license.
 */

var Proc = require('child_process');
var Fs = require('fs-extra');

var getRunningPid = function (callback) {

    Fs.readFile(__dirname + '/scales.pid', {
        encoding: 'utf-8'
    }, function (err, text) {

        if (err) {
            return callback(err);
        }

        try {
            var pid = parseInt(text);
            process.kill(parseInt(pid), 0);
            return callback(undefined, pid);
        } catch (e) {
            return callback(e);
        }
    });
};

switch (process.argv[2]) {

    case 'start':
    {
        console.log('Starting Scales');
        Proc.fork(__dirname + '', {
            env: process.env
        });
        console.log('Start process began, use ' + './scales status'.bold + ' to check if it\'s running');
        break;
    }

    case 'stop':
    {
        console.log('Stopping Scales');
        getRunningPid(function (err, pid) {
            if (err) {
                console.error('Error reading PID, was Scales even running?', err.message);
            }

            process.kill(pid, 'SIGINT');

            var waiting = function () {
                try {
                    process.kill(pid, 0);
                    setTimeout(waiting, 1000);
                } catch (e) {
                }
            }
            console.log('Kill sent, waiting for process to terminate');
            waiting();
        });
        break;
    }
    case 'start':
    {
        console.log('Starting Scales');
        Proc.fork(__dirname, {
            env: process.env
        });
        break;
    }

    case 'dev':
    {
        console.log('Starting Scales with dev view');
        var devProc = Proc.spawn('npm', ['run-script', 'start-verbose'], {
            env: process.env,
            stdio: [0, 1, 2]
        });

        devProc.on('close', function (code) {
            process.exit(code);
        });
        break;
    }
    default:
    {
        console.log('Scales - PufferPanel Daemon');
        console.log('Usage:');
        console.log('./scales {start|stop|status|dev}');
        console.log('    start  - Starts the Scales service');
        console.log('    stop   - Stops the Scales service');
        console.log('    status - Shows the status of the Scales service');
        console.log('    dev    - Run the Scales service in a debug view');
        break;
    }
}
